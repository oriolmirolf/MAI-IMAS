emergency_doctor_task:
  description: >
    First, analyze this information about a fire emergency: {FireEmergency}.
    Second, using the information obtained, evaluate the severity of each injured person and classify their injury in one of the
    following three categories: "Nurse Check", "Hospitalization" and "ICU".
    'Nurse Check': Being attended by the ambulance nurses is sufficient.
    'Hospital Check': The person needs to go to the hospital, but not ICU.
    'ICU': The person needs Intensive Care Unit (ICU) because they are very injured.
    Third, write the output using the expected_output guidelines. DO NOT HALLUCINATE.
  expected_output: >
    You MUST use the following output structure:
    A Fire Emergency has been reported at "real address of the fire location".\n
    * Person "1st_injured_id" with injury "state their injury" needs "Nurse Check/Hospitalization/ICU".
    * Person "2nd_injured_id" with injury "state their injury" needs "Nurse Check/Hospitalization/ICU".
    ...
  agent: emergency_doctor_agent


ambulance_select_task:
  description: >
    First, decide how many ambulances N are required for the fire emergency (one ambulance for each injured person needing 
    Hospitalization or ICU). Additionally, one extra ambulance without counting Hospitalization and ICU for every 3 nurse checks.
    Second, use the AmbulanceSelectorTool to obtain the N closest ambulances ids to the fire emergency and their distances.
    Third, once obtained the tool results, write the output using the expected_output guidelines. DO NOT HALLUCINATE.
  expected_output: >
    You MUST use the following output structure:
    A Fire Emergency has been reported at "real address of the fire location".\n
    * Injured "1st_injured_id" requiring "1st_injured_requirement" was assigned to "1st_ambulance_id".
          Ambulance "1st_ambulance_id" starts at their origin location "1st_ambulance_location" and has a travel distance of "1st_ambulance_distance" meters.
    * Injured "2nd_injured_id" requiring "2nd_injured_requirement" was assigned to "2nd_ambulance_id".
          Ambulance "2nd_ambulance_id" starts at their origin location "2nd_ambulance_location" and has a travel distance of "2nd_ambulance_distance" meters.
    ...
  agent: ambulance_selector_agent


hospital_assign_task:
  description: >
    First, use HospitalSelectorTool to obtain the information relevant for each hospital (distance from the fire location,
    number of normal rooms available, and number of ICU rooms available). Then, assign to each ambulance a hospital and an appropriate hospital room.
    You MUST take into account the hospitals capacities (for example, if the injured needs ICU, the hospital assigned 
    must have one ICU room available). Take into account that ambulances for nurse check do not need to return to the hospital.
    Second, write the output following the guidelines of the expected_output. DO NOT HALLUCINATE. Take into account that Nurse Check injureds do not need ambulances.
  expected_output: >
    You MUST add the second route to the previous agent's answer. You MUST NOT change anything else from the previous agent's output.
    Your final output MUST use the following output structure:
    A Fire Emergency has been reported at "real address of the fire location".\n
    * Ambulance "1st_ambulance_id" transporting injured "1st_injured_id" requiring "1st_injured_requirement" was assigned to hospital "hospital_id" in room "room_id".
          Ambulance "1st_ambulance_id" starts at their origin location "1st_ambulance_origin_location" and has a travel distance of "previous_calculated_ambulance_distance" meters.
          Ambulance "1st_ambulance_id" ends at their assigned hospital location "1st_hospital_assigned_location" and has a travel distance of "1st_ambulance_distance" meters.
    ...
  agent: hospital_assigner_agent


route_navigate_task:
  description: >
    Use the RouteNavigatorTool only once to obtain correctly two routes for each ambulance.
    The tool retuns for each ambulance, the route from their origin location to the fire emergency,
    and the route from the fire emergency to the hospital they were assigned to.
    Ambulances assigned to the Nurse Checks stay at the fire location.
    DO NOT HALLUCINATE. PROVIDE THE FULL ADDRESS TO THE TOOL.
  expected_output: >
    You MUST NOT delete or change anything from the previous agent's answer.
    Your final output MUST ADD the routes obtained following this output structure:
    A Fire Emergency has been reported at "real address of the fire location".\n
    * Ambulance "1st_ambulance_id" transporting injured "1st_injured_id" requiring "1st_injured_requirement" was assigned to hospital "hospital_id" in room "room_id".
          - Ambulance "1st_ambulance_id" starts at their origin location "1st_ambulance_location" and has a travel distance of "previous_calculated_ambulance_distance" meters.
            The optimal route calculated is [here write the optimal route calculated for this ambulance for their first route].
          - Ambulance "1st_ambulance_id" ends at their assigned hospital location "hospital_assigned_location" and has a travel distance of "1st_ambulance_distance" meters.
            The optimal route calculated is [here write the optimal route calculated for this ambulance for their second route].
    ...
  agent: route_navigator_agent


medical_plan_task:
  description: >
    Produce the final medical plan by aggregating the outputs from both 
    the Ambulance branch and the Hospital branch. Ensure a coherent, end-to-end 
    proposal from dispatch to final patient handoff. 
  expected_output: >
    A single unified plan for the Medical Services Crew that includes ambulance 
    assignments, hospital assignments, and any relevant route or timing 
    information.
  agent: medical_planner_agent
