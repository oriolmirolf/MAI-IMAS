emergency_doctor_task:
  description: >
    First, use the FileReadTool only once to read a file containing information about the fire emergency.
    Second, using the information from the file read, evaluate the severity of each injured person and classify their injury in one of the
    following three categories: "Nurse Check", "Hospitalization" and "ICU".
    'Nurse Check': Being attended by the ambulance nurses is sufficient.
    'Hospital Check': The person needs to go to the hospital, but not ICU.
    'ICU': The person needs Intensive Care Unit (ICU) because they are very injured.
  expected_output: >
    For each injured person you must state their id, injury and requirement. 
    You MUST use the following output structure:
    """
    * Person {1st_injured_id} with injury {state their injury} needs {Nurse Check/Hospitalization/ICU}.
    * Person {2nd_injured_id} with injury {state their injury} needs {Nurse Check/Hospitalization/ICU}.
    ...
    """
  agent: emergency_doctor_agent


ambulance_select_task:
  description: >
    First, decide how many ambulances N are required for the fire emergency (one ambulance for each injured person needing 
    Hospitalization or ICU).
    Second, use the AmbulanceSelectorTool to obtain the N closest ambulances ids to the fire emergency and their distances.
  expected_output: >
    For each injured person state their requirement (Nurse Check, Hospitalization or ICU), the ambulance id it was assigned and its distance.
    You MUST use the following output structure:
    """
    * Injured {1st_injured_id} requiring {1st_injured_requirement} was assigned to {1st_ambulance_id} ({1st_ambulance_distance} meters).
    * Injured {2nd_injured_id} requiring {2nd_injured_requirement} was assigned to {2nd_ambulance_id} ({1st_ambulance_distance} meters).
    ...
    """
  agent: ambulance_selector_agent
# TODO: Add an ambulance for every 4 persons needing nurse check (Nº ambulances nurse check = 4 / n_persons_needing_nurse_check)

ambulance_navigate_task:
  description: >
    First, use the FileReadTool only once to read a file containing information about the hospitals and their capacities.
    Then, assign one hospital to each of the ambulances selected by the previous agent.
    You MUST take into account the hospitals capacities (for example, if the injured needs ICU, the hospital assigned 
    must have one ICU room available).
  expected_output: >
    For each ambulance assign them to a hospital.
    """
    * Ambulance {1st_ambulance_id} transporting injured {1st_injured_id} requiring {1st_injured_requirement} was assigned to hospital {hospital_id}.
    * Ambulance {1st_ambulance_id} transporting injured {2nd_injured_id} requiring {1st_injured_requirement} was assigned to hospital {hospital_id}.
    ...
    """
  agent: ambulance_navigator_agent


ambulance_plan_task:
  description: >
    Combine the outputs from the Ambulance Selector and Ambulance Navigator. 
    Produce a unified ambulance plan that specifies which ambulances are assigned 
    and the route each will follow. This plan is then passed along to the next stage.
  expected_output: >
    A single, consolidated plan detailing each selected ambulance, its route, 
    and any additional notes or requirements needed by the ambulance teams.
  agent: ambulance_planner_agent

hospital_select_task:
  description: >
    Assess the available hospital options and choose the most suitable facilities 
    for treating the victims. Take into account critical factors such as the hospital's 
    capacity, specialized medical services, and proximity to the emergency site to 
    ensure timely and effective care.
  expected_output: >
    For all the injured persons, assign them to the hospital nearest hospital, taking
    into account the available capacity and the severity of their injuries.
  agent: hospital_selector_agent

hospital_navigate_task:
  description: >
    Plan the route from the emergency location to the selected hospital(s), 
    aiming for minimal travel time and safe transport of the injured. If 
    multiple hospitals are chosen, provide separate route plans for each.
  expected_output: >
    A set of route plans—one per hospital IDs assignment—specifying the chosen 
    path or key checkpoints for each patient injured (IDs) that needs to go to
    the hospital.
  agent: hospital_navigator_agent

hospital_plan_task:
  description: >
    Synthesize the outputs from the Hospital Selector and Hospital Navigator 
    into a comprehensive hospital plan. Include which hospitals are chosen, 
    and how each ambulance will reach them.
  expected_output: >
    A consolidated view of hospital usage, highlighting each hospital, 
    assigned patients/ambulances, and the routes to be followed.
  agent: hospital_planner_agent

medical_plan_task:
  description: >
    Produce the final medical plan by aggregating the outputs from both 
    the Ambulance branch and the Hospital branch. Ensure a coherent, end-to-end 
    proposal from dispatch to final patient handoff. 
  expected_output: >
    A single unified plan for the Medical Services Crew that includes ambulance 
    assignments, hospital assignments, and any relevant route or timing 
    information.
  agent: medical_planner_agent
